# .github/workflows/run-playwright.yml
name: Run Playwright Test and Publish Report

on:
  workflow_dispatch:
    inputs:
      filename:
        description: 'Playwright test filename (e.g. test_login_successful.spec.js)'
        required: true
      issue_number:
        description: 'Optional issue number'
        required: false

permissions:
  actions: write
  contents: write
  pages: write
  id-token: write

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend
      # - name: Run backend tests
      #   run: npm test
      #   working-directory: ./backend

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend
      - name: Run frontend build
        run: npm run build
        working-directory: ./frontend

  run-and-publish:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]  # espera pelos jobs anteriores para correr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run selected Playwright test (generate HTML report)
        id: run_tests
        run: |
          echo "Running test: ${{ github.event.inputs.filename }}"
          if [ ! -f "tests/generated/${{ github.event.inputs.filename }}" ]; then
            echo "ERROR: test file not found: tests/generated/${{ github.event.inputs.filename }}"
            exit 2
          fi
          npx playwright test "tests/generated/${{ github.event.inputs.filename }}" --reporter=html --output=playwright-report || true
          if [ ! -f playwright-report/index.html ]; then
            echo "No playwright-report/index.html produced"
          fi

      - name: Prepare pages artifact dir
        run: |
          rm -rf published_report || true
          mkdir -p published_report
          if [ -f playwright-report/index.html ]; then
            cp playwright-report/index.html published_report/${{ github.event.inputs.filename }}.html
          else
            echo "<html><body><h1>No report generated</h1></body></html>" > published_report/${{ github.event.inputs.filename }}.html
          fi
          ls -la published_report

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: published_report

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Output public URL
        run: |
          echo "Report published as: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/${{ github.event.inputs.filename }}.html"
